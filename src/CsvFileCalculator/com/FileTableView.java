/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CsvFileCalculator.com;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author imran
 */
public class FileTableView extends javax.swing.JFrame {

    /**
     * Creates new form FileTableView
     */
    String loc;
    int count = 0;
    
    
    
    public void setLocation(String s){
        loc = s;
    }
    
    public void incrementCount(){
        this.count++;
    }
    
    public FileTableView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        PriceCalculationTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jpriceRisk = new javax.swing.JTextField();
        jshipRisk = new javax.swing.JTextField();
        jreturnShipRisk = new javax.swing.JTextField();
        jpaypalFees = new javax.swing.JTextField();
        jfinalValueFees = new javax.swing.JTextField();
        jinsertionFees = new javax.swing.JTextField();
        jtax = new javax.swing.JTextField();
        jcurrencyRisk = new javax.swing.JTextField();
        jshopforsoulProfit = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jamazonFinalValueFee = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jebayProfit = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jamazonSpecialPriceProfit = new javax.swing.JTextField();
        jamazonProfit = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Import");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 857, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(368, 368, 368)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 109, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Input", jPanel1);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Import");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        PriceCalculationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(PriceCalculationTable);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Export");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setText("Ship Risk%");

        jLabel3.setText("Price Risk%");

        jLabel4.setText("Return Ship Risk");

        jLabel5.setText("Paypal Fees%");

        jLabel6.setText("Final Value Fees%");

        jLabel7.setText("Insertion Fees%");

        jLabel8.setText("Tax%");

        jLabel9.setText("Currency Risk");

        jpriceRisk.setText("0.03");
        jpriceRisk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpriceRiskActionPerformed(evt);
            }
        });

        jshipRisk.setText("0.8178");
        jshipRisk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jshipRiskActionPerformed(evt);
            }
        });

        jreturnShipRisk.setText("0.1");

        jpaypalFees.setText("0.03");

        jfinalValueFees.setText("0.07");

        jinsertionFees.setText("1");
        jinsertionFees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jinsertionFeesActionPerformed(evt);
            }
        });

        jtax.setText("0.13");
        jtax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtaxActionPerformed(evt);
            }
        });

        jcurrencyRisk.setText("1");

        jshopforsoulProfit.setText("0.05");

        jLabel10.setText("ShopforSoul Profit%");

        jLabel11.setText("Ebay Profit");

        jamazonFinalValueFee.setText("0.1");

        jLabel12.setText("Amazon Final Value Fee");

        jebayProfit.setText("0.05");

        jLabel13.setText("Amazon Profit");

        jLabel14.setText("Amazon Special Price Profit");

        jamazonSpecialPriceProfit.setText("0.03");

        jamazonProfit.setText("0.05");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jebayProfit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jshipRisk, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jpriceRisk, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jreturnShipRisk, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addComponent(jamazonFinalValueFee, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jpaypalFees, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jfinalValueFees, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jinsertionFees, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(12, 12, 12)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jtax, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8))))
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jamazonProfit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jamazonSpecialPriceProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcurrencyRisk, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jshopforsoulProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel9)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(jLabel7)
                        .addComponent(jLabel10)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jshopforsoulProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcurrencyRisk, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtax, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jinsertionFees, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jfinalValueFees, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpaypalFees, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jreturnShipRisk, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpriceRisk, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jshipRisk, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jamazonFinalValueFee, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jebayProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jamazonSpecialPriceProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jamazonProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(29, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Price Calculation", jPanel2);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Import");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("Export");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 857, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addComponent(jButton1)
                .addGap(104, 104, 104)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("Output", jPanel3);

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setText("Create new");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(353, 353, 353)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String filePath = loc;
        File file = new File(filePath);
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            String[] columnsName = {"Product_ID", "SKU", "Name", "Raw_Price", "Dummy", 
                "Cheapest_Courier_Shipping", "Product_Ean", "ShopForSoul_Profit", "Ebay_Profit", "ShopForSoul_Cost", 
                "Price", "Ebay_Cost", "Ebay_List_Price", "Special_From_Date", 
                "Special_To_Date", "Special_Price", "Weight", "Is_In_Stock", "Type", 
                "Attribute", "Visibility", "Qty", "Min_Qty", "Use_Config_Min_Qty",
                "Is_Qty_Decimal", "Backorders", "Use_Config_Backorders", "Min_Sale_Qty", "Use_Config_Min_Sale_Qty", 
                "Max_Sale_qty", "Use_Config_Max_Sale_qty", "Notify_Stock_Qty", "Use_Confiq_Notify_Stock_Qty", 
                "Manage_Stock", "Use_Config_Manage_Stock", "Stock_Status_Changed_Auto", "Use_Config_Qty_Increments", 
                "Qty_Increments", "Use_Config_Enable_Qty_Inc", "Enable_qty_Increments", "Is_Decimal_Didvide", "Media_Is_Disabled",
                "Amazon_Profit", "Amazon_Our_Cost", "Amazon_List_Price", "Amazon_Special_Price", "Status"};
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.setColumnIdentifiers(columnsName);
            model.addRow(columnsName);
            Object[] tableLines = br.lines().toArray();
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String productID = null,sku = null,name = null;
                double stockStatus = 0, rawPrice = 0, dummy = 0, cheapestCourierShiping = 0, productEan = 0, weightKg = 0;
                String[] dataRow = line.split(",");
                for(int j=0; j<dataRow.length; j++){
                    if(j==0){
                        productID = dataRow[j];
                    }
                    else if(j==1){
                        sku = dataRow[j];
                    }
                    else if(j==2){
                        name = dataRow[j];
                    }
                    else if(j==12){
                        rawPrice = Double.parseDouble(dataRow[j]);
                    }
                    else if(j==13){
                        dummy = Double.parseDouble(dataRow[j]);
                    }
                    else if(j==14){
                        cheapestCourierShiping = Double.parseDouble(dataRow[j]);
                    }
                    else if(j==15){
                        productEan = Double.valueOf(dataRow[j]);
                    }
                    else if(j==32){
                        weightKg = Double.valueOf(dataRow[j]);
                    }
                    else if(j==38){
                        if("In Stock".equals(dataRow[j])){
                            stockStatus = 1;
                        }else{
                            stockStatus = 0;
                        }
                    }
                }
                double shipRisk = 0.8178;
                double priceRisk = rawPrice * 0.03;
                double total = rawPrice + cheapestCourierShiping + shipRisk + priceRisk;
                double returnShipRisk = 2.726;
                double totalWithShip = total + returnShipRisk;
                double paypalFees = 0.3 + totalWithShip * 0.03;
                double finalValueFee = totalWithShip * 0.07;
                double insertionFee = 1;
                double tax = totalWithShip * 0.13;
                double currencyRisk = 1;
                double shopForSoulProfit = totalWithShip * 0.05;
                double ebayProfit = totalWithShip * 0.05;
                double shopForSoulCost = totalWithShip + paypalFees + currencyRisk + insertionFee;
                double mlp = shopForSoulCost + shopForSoulProfit;
                double mallListPrice = mlp;
                double price = mallListPrice;
                double specialListPrice = shopForSoulCost + shopForSoulProfit * 0.03;
                double buyerPayFromMall = specialListPrice + tax;
                double ebayCost = totalWithShip + paypalFees + finalValueFee + insertionFee + currencyRisk;
                double ebayListPrice = ebayCost + ebayProfit - cheapestCourierShiping;
                double ebayBuyersPay = ebayListPrice + tax + cheapestCourierShiping;
                double ebayVsMall = ebayBuyersPay - buyerPayFromMall;
                double gap = shopForSoulCost - tax + totalWithShip * 0.2;
                double amazonFinalValueFee = shopForSoulCost * 0.1;
                double amazonProfit = totalWithShip * 0.05;
                double amazonOurCost = totalWithShip + paypalFees + insertionFee + currencyRisk + amazonFinalValueFee;
                double amazonListPrice = amazonOurCost + amazonProfit + cheapestCourierShiping - 7;
                double amazonSpecialPrice = totalWithShip * 0.03 + amazonOurCost + cheapestCourierShiping - 7;
                double amazonFinalValueFee2 = amazonFinalValueFee / 1.25;
                double amazonProfit2 = amazonProfit / 1.25;
                double amazonOurCost2 = amazonOurCost / 1.25;
                double amazonListPrice2 = amazonListPrice / 1.25;
                double amazonSpecialPrice2 = amazonSpecialPrice / 1.25;
                double weightPound = weightKg * 2.2;
                DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                Date date = new Date();
                String specialFromDate = dateFormat.format(date);
                String specialToDate = dateFormat.format(date);
                String type = "Simple";
                String attribute = "Default";
                int visibility = 4;
                int qty = 10;
                int minQty = 1;
                int useConfigMinQty = 1;
                int qtyDecimal = 0;
                int backOrders = 0;
                int useConfigBackOrders = 1;
                int minSaleQty = 1;
                int useConfigMinSaleQty = 1;
                int maxSaleQty = 10;
                int useConfigMaxSaleQty = 1;
                int notifyStockQty = 0;
                int useConfigNotifyStockQty = 1;
                int manageStock = 0;
                int useConfigManageStock = 1;
                int stockStatusChangedAuto = 0;
                int useConfigQtyIncrements = 1;
                int qtyIncrements = 0;
                int useConfigEnableQtyInc = 1;
                int enableQtyIncrements = 0;
                int decimalDivided = 0;
                int mediaDisabled = 0;
                int status = 1;
                
                
                
                
                String[] data = {productID, sku, name, String.valueOf(rawPrice), String.valueOf(dummy), String.valueOf(cheapestCourierShiping),
                    String.valueOf(productEan), String.valueOf(shopForSoulProfit), String.valueOf(ebayProfit), String.valueOf(shopForSoulCost),
                    String.valueOf(price), String.valueOf(ebayCost), String.valueOf(ebayListPrice), String.valueOf(specialFromDate),
                    String.valueOf(specialToDate), String.valueOf(specialListPrice), String.valueOf(weightPound), String.valueOf(stockStatus),
                    String.valueOf(type), String.valueOf(attribute), String.valueOf(visibility), String.valueOf(qty),
                    String.valueOf(minQty), String.valueOf(useConfigMinQty), String.valueOf(qtyDecimal), String.valueOf(backOrders),
                    String.valueOf(useConfigBackOrders), String.valueOf(minSaleQty), String.valueOf(useConfigMinSaleQty), String.valueOf(maxSaleQty),
                    String.valueOf(useConfigMaxSaleQty), String.valueOf(notifyStockQty), String.valueOf(useConfigNotifyStockQty), String.valueOf(manageStock),
                    String.valueOf(useConfigManageStock), String.valueOf(stockStatusChangedAuto), String.valueOf(useConfigQtyIncrements), String.valueOf(qtyIncrements),
                    String.valueOf(useConfigEnableQtyInc), String.valueOf(enableQtyIncrements), String.valueOf(decimalDivided), String.valueOf(mediaDisabled),
                    String.valueOf(amazonProfit), String.valueOf(amazonOurCost), String.valueOf(amazonListPrice),
                    String.valueOf(amazonSpecialPrice), String.valueOf(status)};
                model.addRow(data);
            }
                    
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FileTableView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FileTableView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String filePath = loc;
        File file = new File(filePath);
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            String[] columnsName = {"Product_ID", "SKU", "Name", "Raw_Price", "Dummy", 
                "Cheapest_Courier_Shipping", "Product_Ean", "Ship_Risk", "Price_Risk", "Total", 
                "Return_Ship_Risk", "Total_With_Ship", "Paypal_Fees", "Final_Value_Fee", 
                "Insertion_Fee", "Tax", "Currency_Risk", "ShopForSoul_Profit", "Ebay_Profit", 
                "ShopForSoul_Cost", "MLP", "Mall_list_price", "Special_List_Price", "Buyer_Pay_From_Mall",
                "Ebay_Cost", "Ebay_List_Price", "Ebay_Buyers_Pay", "Ebay_VS_Mail", "    ", 
                "Amazon_Final_Value_Fee", "Amazon_Profit", "Amazon_Our_Cost", "Amazon_List_Price", 
                "Amazon_Special_Price", "Amazon_Final_Value_Fee", "Amazon_Profit", "Amazon_Our_Cost", 
                "Amazon_List_Price", "Amazon_Special_Price", "Weight", "Weight", "Stock_Status"};
            DefaultTableModel model = (DefaultTableModel)PriceCalculationTable.getModel();
            model.setColumnIdentifiers(columnsName);
            model.addRow(columnsName);
            Object[] tableLines = br.lines().toArray();
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String productID = null,sku = null,name = null;
                double stockStatus = 0, rawPrice = 0, dummy = 0, cheapestCourierShiping = 0, productEan = 0, weightKg = 0;
                String[] dataRow = line.split(",");
                for(int j=0; j<dataRow.length; j++){
                    if(j==0){
                        productID = dataRow[j];
                    }
                    else if(j==1){
                        sku = dataRow[j];
                    }
                    else if(j==2){
                        name = dataRow[j];
                    }
                    else if(j==12){
                        rawPrice = Double.parseDouble(dataRow[j]);
                    }
                    else if(j==13){
                        dummy = Double.parseDouble(dataRow[j]);
                    }
                    else if(j==14){
                        cheapestCourierShiping = Double.parseDouble(dataRow[j]);
                    }
                    else if(j==15){
                        productEan = Double.valueOf(dataRow[j]);
                    }
                    else if(j==32){
                        weightKg = Double.valueOf(dataRow[j]);
                    }
                    else if(j==38){
                        if("In Stock".equals(dataRow[j])){
                            stockStatus = 1;
                        }else{
                            stockStatus = 0;
                        }
                    }
                }
                
                double shipRisk = Double.parseDouble(jshipRisk.getText());
                double priceRisk = rawPrice * Double.parseDouble(jpriceRisk.getText());
                double total = rawPrice + cheapestCourierShiping + shipRisk + priceRisk;
                double returnShipRisk = cheapestCourierShiping * Double.parseDouble(jreturnShipRisk.getText());
                double totalWithShip = total + returnShipRisk;
                double paypalFees = Double.parseDouble(jpaypalFees.getText()) + totalWithShip * Double.parseDouble(jpaypalFees.getText());
                double finalValueFee = totalWithShip * Double.parseDouble(jfinalValueFees.getText());
                double insertionFee = Double.parseDouble(jinsertionFees.getText());
                double tax = totalWithShip * Double.parseDouble(jtax.getText());
                double currencyRisk = Double.parseDouble(jcurrencyRisk.getText());;
                double shopForSoulProfit = totalWithShip * Double.parseDouble(jshopforsoulProfit.getText());;
                double ebayProfit = totalWithShip * Double.parseDouble(jebayProfit.getText());;
                double shopForSoulCost = totalWithShip + paypalFees + currencyRisk + insertionFee;
                double mlp = shopForSoulCost + shopForSoulProfit;
                double mallListPrice = mlp;
                double specialListPrice = shopForSoulCost + shopForSoulProfit * 0.03;
                double buyerPayFromMall = specialListPrice + tax;
                double ebayCost = totalWithShip + paypalFees + finalValueFee + insertionFee + currencyRisk;
                double ebayListPrice = ebayCost + ebayProfit - cheapestCourierShiping;
                double ebayBuyersPay = ebayListPrice + tax + cheapestCourierShiping;
                double ebayVsMall = ebayBuyersPay - buyerPayFromMall;
                double gap = shopForSoulCost - tax + totalWithShip * 0.2;
                double amazonFinalValueFee = shopForSoulCost * Double.parseDouble(jamazonFinalValueFee.getText());;
                double amazonProfit = totalWithShip * Double.parseDouble(jamazonProfit.getText());;
                double amazonOurCost = totalWithShip + paypalFees + insertionFee + currencyRisk + amazonFinalValueFee;
                double amazonListPrice = amazonOurCost + amazonProfit + cheapestCourierShiping - 7;
                double amazonSpecialPrice = totalWithShip * Double.parseDouble(jamazonSpecialPriceProfit.getText()) + amazonOurCost + cheapestCourierShiping - 7;
                double amazonFinalValueFee2 = amazonFinalValueFee / 1.25;
                double amazonProfit2 = amazonProfit / 1.25;
                double amazonOurCost2 = amazonOurCost / 1.25;
                double amazonListPrice2 = amazonListPrice / 1.25;
                double amazonSpecialPrice2 = amazonSpecialPrice / 1.25;
                double weightPound = weightKg * 2.2;
                
                String[] data = {productID, sku, name, String.valueOf(rawPrice), String.valueOf(dummy), String.valueOf(cheapestCourierShiping),
                    String.valueOf(productEan), String.valueOf(shipRisk), String.valueOf(priceRisk), String.valueOf(total),
                    String.valueOf(returnShipRisk), String.valueOf(totalWithShip), String.valueOf(paypalFees), String.valueOf(finalValueFee),
                    String.valueOf(insertionFee), String.valueOf(tax), String.valueOf(currencyRisk), String.valueOf(shopForSoulProfit),
                    String.valueOf(ebayProfit), String.valueOf(shopForSoulCost), String.valueOf(mlp), String.valueOf(mallListPrice),
                    String.valueOf(specialListPrice), String.valueOf(buyerPayFromMall), String.valueOf(ebayCost), String.valueOf(ebayListPrice),
                    String.valueOf(ebayBuyersPay), String.valueOf(ebayVsMall), String.valueOf(gap), String.valueOf(amazonFinalValueFee),
                    String.valueOf(amazonProfit), String.valueOf(amazonOurCost), String.valueOf(amazonListPrice), String.valueOf(amazonSpecialPrice),
                    String.valueOf(amazonFinalValueFee2), String.valueOf(amazonProfit2), String.valueOf(amazonOurCost2), String.valueOf(amazonListPrice2),
                    String.valueOf(amazonSpecialPrice2), String.valueOf(weightKg), String.valueOf(weightPound), String.valueOf(stockStatus)};
                model.addRow(data);
            }
                    
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FileTableView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FileTableView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String filePath = loc;
        File file = new File(filePath);
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)jTable3.getModel();
            model.setColumnIdentifiers(columnsName);
            Object[] tableLines = br.lines().toArray();
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
                    
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FileTableView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FileTableView.class.getName()).log(Level.SEVERE, null, ex);
        }
          
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        String filePath = loc;
        File file = new File(filePath);
        
        incrementCount();
        try {
            FileWriter fw = new FileWriter(file.getName()+"_PriceCalculation.csv", true);
            BufferedWriter bw = new BufferedWriter(fw);
            for(int i = 0; i < PriceCalculationTable.getRowCount(); i++){//rows
                for(int j = 0; j < PriceCalculationTable.getColumnCount(); j++){//columns
                    bw.write(PriceCalculationTable.getValueAt(i, j).toString()+", ");
                }
                bw.newLine();
            }
            
            bw.close();
            fw.close();
            JOptionPane.showMessageDialog(null, "File Has Been Created!!!");
            
        } catch (IOException ex) {
            Logger.getLogger(FileTableView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        incrementCount();
        String filePath = loc;
        File file = new File(filePath);
        
        try {
            FileWriter fw = new FileWriter(file.getName()+"_FinalOutput.csv", true);
            BufferedWriter bw = new BufferedWriter(fw);
            for(int i = 0; i < jTable1.getRowCount(); i++){//rows
                for(int j = 0; j < jTable1.getColumnCount(); j++){//columns
                    bw.write(jTable1.getValueAt(i, j).toString()+", ");
                }
                bw.newLine();
            }
            
            bw.close();
            fw.close();
            JOptionPane.showMessageDialog(null, "File Has Been Created!!!");
            
        } catch (IOException ex) {
            Logger.getLogger(FileTableView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if(count==2){
            this.setVisible(false);
            FileUpload f = new FileUpload();
            f.setVisible(true);
        }
        else{
            int YesOrNo = JOptionPane.showConfirmDialog(null,"All files were not calculated. Do you wish to continue?","!!!Warning", JOptionPane.YES_NO_OPTION);
            if(YesOrNo == 0)
            {
                this.setVisible(false);
                FileUpload f = new FileUpload();
                f.setVisible(true);
            }else{
                //do nothing
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jshipRiskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jshipRiskActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jshipRiskActionPerformed

    private void jpriceRiskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpriceRiskActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpriceRiskActionPerformed

    private void jinsertionFeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jinsertionFeesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jinsertionFeesActionPerformed

    private void jtaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtaxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileTableView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PriceCalculationTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jamazonFinalValueFee;
    private javax.swing.JTextField jamazonProfit;
    private javax.swing.JTextField jamazonSpecialPriceProfit;
    private javax.swing.JTextField jcurrencyRisk;
    private javax.swing.JTextField jebayProfit;
    private javax.swing.JTextField jfinalValueFees;
    private javax.swing.JTextField jinsertionFees;
    private javax.swing.JTextField jpaypalFees;
    private javax.swing.JTextField jpriceRisk;
    private javax.swing.JTextField jreturnShipRisk;
    private javax.swing.JTextField jshipRisk;
    private javax.swing.JTextField jshopforsoulProfit;
    private javax.swing.JTextField jtax;
    // End of variables declaration//GEN-END:variables
}
